openapi: 3.0.3
info:
  title: 心境軌跡 (MindTrack) API
  description: |
    賦予每個人自我覺察的力量，透過數據洞察，將內在感受與外在行為連結，從而建立更健康、更有意識的生活。
    此 API 支援使用者追蹤好習慣、記錄每日心情，並提供關聯性洞察。
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1
    description: Local Development Server
  - url: https://api.mindtrack.app/api/v1
    description: Production Server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
      required:
        - id
        - email
        - created_at
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          example: strong_password
      required:
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: strong_password
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        token_type:
          type: string
          example: bearer
      required:
        - access_token
        - token_type
    Habit:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        user_id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          example: 每日運動
        created_at:
          type: string
          format: date-time
      required:
        - id
        - user_id
        - name
        - created_at
    HabitCreate:
      type: object
      properties:
        name:
          type: string
          example: 每日閱讀
      required:
        - name
    HabitLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        habit_id:
          type: integer
          format: int64
          readOnly: true
        date_completed:
          type: string
          format: date
          example: 2025-10-30
      required:
        - id
        - habit_id
        - date_completed
    HabitLogCreate:
      type: object
      properties:
        date_completed:
          type: string
          format: date
          example: 2025-10-30
      required:
        - date_completed
    MoodLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        user_id:
          type: integer
          format: int64
          readOnly: true
        mood_score:
          type: integer
          minimum: 1
          maximum: 5
          example: 4
        notes:
          type: string
          nullable: true
          example: 今天工作很順利
        date:
          type: string
          format: date
          example: 2025-10-30
      required:
        - id
        - user_id
        - mood_score
        - date
    MoodLogCreate:
      type: object
      properties:
        mood_score:
          type: integer
          minimum: 1
          maximum: 5
          example: 3
        notes:
          type: string
          nullable: true
          example: 感覺有點疲憊
        date:
          type: string
          format: date
          example: 2025-10-30
      required:
        - mood_score
        - date

  responses:
    UnauthorizedError:
      description: 認證失敗或無效的 Token
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid authentication credentials
    NotFoundError:
      description: 資源未找到
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Resource not found
    ValidationError:
      description: 請求數據驗證失敗
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Validation error
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string

  parameters:
    QueryLimit:
      name: limit
      in: query
      description: 每頁返回的項目數量
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 10
    QueryOffset:
      name: offset
      in: query
      description: 查詢結果的偏移量 (用於分頁)
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: 註冊新使用者帳號
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: 註冊成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: Email 已被註冊
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already registered
  /auth/login:
    post:
      tags:
        - Authentication
      summary: 使用者登入並獲取 JWT Token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登入成功，返回 JWT Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /habits:
    get:
      tags:
        - Habits
      summary: 獲取當前使用者的所有習慣
      operationId: listHabits
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/QueryOffset'
      responses:
        '200':
          description: 成功獲取習慣列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Habit'
              examples:
                habitsList:
                  value:
                    - id: 1
                      user_id: 1
                      name: 每日運動
                      created_at: 2025-10-31T10:05:00Z
                    - id: 2
                      user_id: 1
                      name: 冥想 10 分鐘
                      created_at: 2025-10-31T10:06:00Z
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Habits
      summary: 建立一個新習慣
      operationId: createHabit
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitCreate'
      responses:
        '201':
          description: 習慣建立成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /habits/{habit_id}:
    parameters:
      - name: habit_id
        in: path
        description: 習慣的唯一識別碼
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Habits
      summary: 獲取指定習慣的詳細資訊
      operationId: getHabit
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 成功獲取習慣資訊
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Habits
      summary: 更新指定習慣的資訊
      operationId: updateHabit
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitCreate' # Reusing HabitCreate for update
      responses:
        '200':
          description: 習慣更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Habits
      summary: 刪除指定習慣
      operationId: deleteHabit
      security:
        - BearerAuth: []
      responses:
        '204':
          description: 習慣刪除成功 (無內容返回)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /habits/{habit_id}/logs:
    parameters:
      - name: habit_id
        in: path
        description: 習慣的唯一識別碼
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - HabitCompletions
      summary: 獲取指定習慣的所有打卡紀錄
      operationId: listHabitLogs
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/QueryOffset'
      responses:
        '200':
          description: 成功獲取打卡紀錄列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HabitLog'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    post:
      tags:
        - HabitCompletions
      summary: 為指定習慣新增一筆打卡紀錄
      operationId: createHabitLog
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitLogCreate'
      responses:
        '201':
          description: 打卡紀錄建立成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HabitLog'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /habits/{habit_id}/logs/{log_id}:
    parameters:
      - name: habit_id
        in: path
        description: 習慣的唯一識別碼
        required: true
        schema:
          type: integer
          format: int64
      - name: log_id
        in: path
        description: 打卡紀錄的唯一識別碼
        required: true
        schema:
          type: integer
          format: int64
    delete:
      tags:
        - HabitCompletions
      summary: 刪除指定打卡紀錄
      operationId: deleteHabitLog
      security:
        - BearerAuth: []
      responses:
        '204':
          description: 打卡紀錄刪除成功 (無內容返回)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /moods:
    get:
      tags:
        - Moods
      summary: 獲取當前使用者的所有心情紀錄
      operationId: listMoodLogs
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/QueryOffset'
      responses:
        '200':
          description: 成功獲取心情紀錄列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoodLog'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Moods
      summary: 建立一筆新的心情紀錄
      operationId: createMoodLog
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoodLogCreate'
      responses:
        '201':
          description: 心情紀錄建立成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoodLog'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /moods/{mood_id}:
    parameters:
      - name: mood_id
        in: path
        description: 心情紀錄的唯一識別碼
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - Moods
      summary: 獲取指定心情紀錄的詳細資訊
      operationId: getMoodLog
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 成功獲取心情紀錄資訊
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoodLog'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Moods
      summary: 更新指定心情紀錄
      operationId: updateMoodLog
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoodLogCreate' # Reusing MoodLogCreate for update
      responses:
        '200':
          description: 心情紀錄更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoodLog'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Moods
      summary: 刪除指定心情紀錄
      operationId: deleteMoodLog
      security:
        - BearerAuth: []
      responses:
        '204':
          description: 心情紀錄刪除成功 (無內容返回)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
